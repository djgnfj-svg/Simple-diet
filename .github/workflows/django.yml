
name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


env :
  SECRET_KEY : ${{secrets.SECRET_KEY}}
  S3_BUCKET_NAME : ${{secrets.S3_BUCKET_NAME}}
  CODE_DEPLOY_APPLICATION_NAME : ${{secrets.CODE_DEPLOY_APPLICATION_NAME}}
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME : ${{secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME}}
  DEPLOY_PACKAGE_NAME: "django-app-${{ github.sha }}.zip"

jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
  
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name : Secrets setting
      run : |
        touch backend/.secrets.json
        echo { >> backend/.secrets.json
        echo "SECRET_KEY" = "temp", >> backend/.secrets.json
        sed -i '2s/.*/"SECRET_KEY" : "${{env.SECRET_KEY}}",/g' backend/.secrets.json
        echo \"ENV\" : \"DEV\" >>  backend/.secrets.json
        echo } >> backend/.secrets.json
    - name: Run Tests
      run: |
        cd backend/
        python manage.py test -v 2
  CD :
    needs : build_test
    runs-on: ubuntu-latest
    steps : 
      - name: Git clone on our repo
        uses: actions/checkout@v2

      - name: Make zip file
        run: |
          zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./*
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CD_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./${{ env.DEPLOY_PACKAGE_NAME }} s3://${{env.S3_BUCKET_NAME}}/${{ env.DEPLOY_PACKAGE_NAME }}

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{env.S3_BUCKET_NAME}},bundleType=zip,key=${{ env.DEPLOY_PACKAGE_NAME }}